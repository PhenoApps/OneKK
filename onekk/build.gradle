apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    signingConfigs {
        playStoreConfig {
            Properties keystoreProps = new Properties()
            if (file('keystore.config').exists()) {
                keystoreProps.load(new FileInputStream(file('keystore.config')))
            }
            keyAlias keystoreProps['keyAlias']
            keyPassword keystoreProps['keyPassword']
            storePassword keystoreProps['storePassword']
            storeFile file('1kk.keystore.jks')
        }
    }

    compileSdkVersion 31

    defaultConfig {
        applicationId "org.wheatgenetics.onekk"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode = 211
        versionName = '2.1.1'
        multiDexEnabled true
        renderscriptTargetApi 24
        renderscriptSupportModeEnabled false
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            clean
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.playStoreConfig
            pseudoLocalesEnabled false
            zipAlignEnabled true

            //disable this if you want to run tests on provided datasets
            //otherwise these assets will be erased (unless you want a 1Gb app)
            aaptOptions {
                ignoreAssetsPattern "!datasets"
            }
        }

        debug {
            clean
            debuggable true
//            shrinkResources true
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }

}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:27.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'

    //TODO clean dependencies

    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation project(path: ':openCVLibrary343')

    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation "org.robolectric:robolectric:4.0.2"
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.8.0'

    def lifecycle_version = "2.3.0-rc01"

    def nav_version = "2.3.2"

    def multidex_version = "2.0.1"

    def room_lifecycle_version = "2.2.6"

    kapt "androidx.room:room-compiler:$room_lifecycle_version"

    // Kotlin
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    //Kotlin Extension Modules
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "androidx.room:room-ktx:$room_lifecycle_version"
    implementation "androidx.room:room-runtime:$room_lifecycle_version"

    //androidx
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-alpha2'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation "androidx.activity:activity-ktx:1.2.0-rc01"
    implementation "androidx.fragment:fragment-ktx:1.3.0-rc01"
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    implementation "androidx.multidex:multidex:$multidex_version"

    //jetbrains
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //other
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    //gatt library
    implementation "com.polidea.rxandroidble2:rxandroidble:1.11.1"

    //glide
    implementation("com.github.bumptech.glide:glide:4.11.0") {
        exclude group: "com.android.support"
    }

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.jjoe64:graphview:4.2.2'
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    //github repositories
    implementation 'com.github.MFlisar:changelog:1.1.7'
    implementation 'com.mikepenz:aboutlibraries-core:8.3.0'
    implementation 'com.mikepenz:aboutlibraries:8.3.0'
    //    Dont update the next lib
    implementation 'com.github.daniel-stoneuk:material-about-library:2.4.2'
    //app intro github AndroidX Capable version
    implementation 'com.github.AppIntro:AppIntro:6.1.0'
    implementation 'com.github.evrencoskun:TableView:v0.8.9.4'

    implementation 'math.geom2d:javaGeom:0.11.1'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-alpha02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha22"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha22"

    //jetpack workmanager dependencies
    def work_version = "2.4.0"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

}

repositories {
    mavenCentral()
}
